//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EMaquedaControlEscolarEntities : DbContext
    {
        public EMaquedaControlEscolarEntities()
            : base("name=EMaquedaControlEscolarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumnos { get; set; }
        public virtual DbSet<Materia> Materias { get; set; }
        public virtual DbSet<AlumnoMateria> AlumnoMaterias { get; set; }
    
        public virtual int AlumnoAdd(string nombre, string apellidopaterno, string apellidomaterno)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidopaternoParameter = apellidopaterno != null ?
                new ObjectParameter("apellidopaterno", apellidopaterno) :
                new ObjectParameter("apellidopaterno", typeof(string));
    
            var apellidomaternoParameter = apellidomaterno != null ?
                new ObjectParameter("apellidomaterno", apellidomaterno) :
                new ObjectParameter("apellidomaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoAdd", nombreParameter, apellidopaternoParameter, apellidomaternoParameter);
        }
    
        public virtual int AlumnoDelete(Nullable<int> idalumno)
        {
            var idalumnoParameter = idalumno.HasValue ?
                new ObjectParameter("idalumno", idalumno) :
                new ObjectParameter("idalumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoDelete", idalumnoParameter);
        }
    
        public virtual ObjectResult<AlumnoGetAll_Result> AlumnoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoGetAll_Result>("AlumnoGetAll");
        }
    
        public virtual ObjectResult<AlumnoGetById_Result> AlumnoGetById(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoGetById_Result>("AlumnoGetById", idAlumnoParameter);
        }
    
        public virtual int AlumnoUpdate(string nombre, string apellidopaterno, string apellidomaterno, Nullable<int> idalumno)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidopaternoParameter = apellidopaterno != null ?
                new ObjectParameter("apellidopaterno", apellidopaterno) :
                new ObjectParameter("apellidopaterno", typeof(string));
    
            var apellidomaternoParameter = apellidomaterno != null ?
                new ObjectParameter("apellidomaterno", apellidomaterno) :
                new ObjectParameter("apellidomaterno", typeof(string));
    
            var idalumnoParameter = idalumno.HasValue ?
                new ObjectParameter("idalumno", idalumno) :
                new ObjectParameter("idalumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoUpdate", nombreParameter, apellidopaternoParameter, apellidomaternoParameter, idalumnoParameter);
        }
    
        public virtual int MateriaDelete(Nullable<int> idMateria)
        {
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MateriaDelete", idMateriaParameter);
        }
    
        public virtual ObjectResult<MateriaGetAll_Result> MateriaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MateriaGetAll_Result>("MateriaGetAll");
        }
    
        public virtual ObjectResult<MateriaGetById_Result> MateriaGetById(Nullable<int> idMateria)
        {
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MateriaGetById_Result>("MateriaGetById", idMateriaParameter);
        }
    
        public virtual int MateriasAdd(string nombre, Nullable<decimal> costo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MateriasAdd", nombreParameter, costoParameter);
        }
    
        public virtual int MateriaUpdate(string nombre, Nullable<decimal> costo, Nullable<int> idmateria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var idmateriaParameter = idmateria.HasValue ?
                new ObjectParameter("idmateria", idmateria) :
                new ObjectParameter("idmateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MateriaUpdate", nombreParameter, costoParameter, idmateriaParameter);
        }
    
        public virtual ObjectResult<MateriasGetAllByIdAlumno_Result> MateriasGetAllByIdAlumno(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MateriasGetAllByIdAlumno_Result>("MateriasGetAllByIdAlumno", idAlumnoParameter);
        }
    
        public virtual int AlumnoMateriaDelete(Nullable<int> idAlumnoMateria)
        {
            var idAlumnoMateriaParameter = idAlumnoMateria.HasValue ?
                new ObjectParameter("idAlumnoMateria", idAlumnoMateria) :
                new ObjectParameter("idAlumnoMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoMateriaDelete", idAlumnoMateriaParameter);
        }
    
        public virtual ObjectResult<AlumnoMateriasNoInscritas_Result> AlumnoMateriasNoInscritas(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnoMateriasNoInscritas_Result>("AlumnoMateriasNoInscritas", idAlumnoParameter);
        }
    
        public virtual int AlumnoMateriaAdd(Nullable<int> idAlumno, Nullable<int> idMateria)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("IdAlumno", idAlumno) :
                new ObjectParameter("IdAlumno", typeof(int));
    
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("IdMateria", idMateria) :
                new ObjectParameter("IdMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlumnoMateriaAdd", idAlumnoParameter, idMateriaParameter);
        }
    }
}
